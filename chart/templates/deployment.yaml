apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "golinks.fullname" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    {{- include "golinks.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "golinks.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PORT
              value: "{{ .Values.service.port }}"
            {{- if  .Values.image.debug }}
            - name: DEBUG
              value: "1"
            {{- end }}
            - name: GOLINKS_SECRET_KEY
              valuesFrom:
                secretKeyRef:
                  name: {{ include "golinks.secretName" . }}
                  {{- if not .Values.auth.existingSecret }}
                  key: secret-key
                  {{- else }}
                  key: {{ .Values.auth.secretKey }}
                  {{- end }}
          ports:
            - name: http
              containerPort: 80
              protocol: TCP
          livenessProbe:
            httpGet:
              path: /heartbeat
              port: http
          readinessProbe:
            httpGet:
              path: /heartbeat
              port: http
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          {{- if .Values.database.persist }}
          volumeMounts:
            - mountPath: {{ .Values.volume.mountPath }}
              name: {{ .Values.volume.name }}
              {{- if .Values.volume.subPath }}
              subPath: {{ .Values.volume.subPath }}
              {{- end }}
          {{- end }}
      {{- if .Values.database.persist }}
      volumes:
        - name: {{ .Values.volume.name }}
          {{- toYaml .Values.volume.storage | nindent 10 }}
      {{- end }}
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}